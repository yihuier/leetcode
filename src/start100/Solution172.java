package start100;

public class Solution172 {

    /**
     * 分析后发现，每出现一个5多一个尾零，比如 125 = 5 * 5 * 5 中有三个5所以多三个零
     * 所以问题转换为求n!=1*2*3*...*n中5作为乘法因子出现的个数
     * 也就是求 5*1 5*2 5*3 ... 5*k (5*k<=n<5*(k+1))中5的个数
     * 然后除于5后，变成求(其实可以理解为这些式子中至少含有一个5的式子的个数)
     * 1 2 3 ... k (这里的k表示有多少个这样的式子，如20/5=4，表示在1-20中有4个这样的式子)
     * 我们可以继续转换为求其中5的个数
     * 5*1 5*2 5*3 ... 5*(k/5) (k>=5)
     * 继续除于5(其实可以理解为求5*1 5*2 5*3 ... 5*k中至少含有2个5的式子的个数)
     * ...
     * 直到 k < 5
     *
     * 因此整个过程可以转换为求
     * 5 * k (5*k<=n<5*(k+1)) 可以被5除几次
     * 除一次表示其中至少包含一个5的式子的个数
     * 除两次表示其中至少包含两个5的式子的个数
     * ...
     * 累加每次的和即为问题结果
     */
    public int trailingZeroes(int n) {
        int count = 0;

        while (n >= 5) {
            n /= 5;
            count += n;
        }

        return count;
    }
}
